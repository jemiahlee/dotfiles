#!/usr/bin/env perl

use warnings;
use strict;
use Cwd qw/cwd/;
use File::Find;
use Getopt::Long;

my $START_DIR = cwd();
my($verbose, $dry_run);

GetOptions(
  'dry_run|n' => \$dry_run,
  'verbose'   => \$verbose,
);

my $DROPBOX_BASE_DIR = qq{$ENV{HOME}/Dropbox/Music};
my $AUDIO_FILE_BASE_DIR = qq{$ENV{HOME}/Music/Phile Audio/audio};

find(\&wanted, $AUDIO_FILE_BASE_DIR);
chdir $START_DIR;

sub wanted {
    return unless /(mp3|flac)$/;
    my $extension = $1;

    return unless $File::Find::dir =~ m{.*/([^/]+)/([^/]+)/Disc (\d+)};

    chdir $File::Find::dir;

    my($artist, $album, $disc_number) = ($1, $2, $3);
    print "$File::Find::name : $artist || $album || $disc_number\n";

    my $fixed_filename = fix_filename($_, $File::Find::name, $disc_number);
    print "Filename is now $fixed_filename\n";

    move_file($artist, $album, $fixed_filename, $extension);
    exit;
}

sub fix_filename {
    my($short_filename, $filename, $disc_number) = @_;

    my $is_part_of_multi_disc = $disc_number > 1 || check_for_multiple_discs($filename);
    print '     ', ($is_part_of_multi_disc ? 'is ' : 'is not '), "part of a multi-disc collection\n";

    my $new_filename = $short_filename;
    if($is_part_of_multi_disc) {
        $new_filename =~ s{^}{/Disc_$disc_number-};
        print "Would rename $short_filename to $new_filename\n";
    }

    my $cwd = cwd();
    print qq{Running `mp3capitalize --bare-print --dry-run '$new_filename'` in $cwd\n};
    `mp3capitalize --bare-print --dry-run '$new_filename'`;
}

sub check_for_multiple_discs {
    my $filename = shift;

    my @file_parts = split m{/Disc}, $filename;
    opendir CURRENT_DIR, $file_parts[0] or die "Couldn't open directory $file_parts[0]: $!";
    my @files = readdir CURRENT_DIR;
    closedir CURRENT_DIR;

    return scalar(grep /Disc/, @files) > 1;
}

sub move_file {
    my($artist, $album, $filename, $extension) = @_;

    my $dropbox_path = prepare_directory($artist, $album, $extension);

    my $new_path = join '/', $full_path, $filename;
    print "rename $filename, $new_path\n";
    # rename $filename, $new_path unless $dry_run;
}

sub prepare_directory {
    my($artist, $album, $extension) = @_;

    my $dropbox_path = qq{$DROPBOX_BASE_DIR/$extension/$artist/$album};

    if(-d $dropbox_path) {
        print "$dropbox_path already exists, removing files older than today...\n";

        #`rm -rf $dropbox_path` unless $dry_run;
    }

    print "Making directory $dropbox_path\n";
    # `mkdir -p $dropbox_path` unless $dry_run;

    return $dropbox_path;
}
