#!/usr/bin/env perl

use warnings;
use strict;
use Cwd qw/cwd/;
use Getopt::Long;


my($verbose, $dry_run);

GetOptions(
  'dry_run|n' => \$dry_run,
  'verbose'   => \$verbose,
);

my $DROPBOX_BASE_DIR = qq{$ENV{HOME}/Dropbox/Music};
my $dirname = shift;

unless($dirname) {
    my $cwd = cwd();
    die "Not in a Disc folder!" unless $cwd =~ m{([^/]+/[^/]+)/Disc \d+};

    $dirname = $1;
    $dirname =~ s/^\s+|\s+$//g;
    $dirname =~ s/ +/_/g;
    $dirname =~ s/'//g;
    print "Using '$dirname' as the directory name.\n";
}

unless($dry_run) {
  `mp3capitalize *.flac`;
  `mp3capitalize *.mp3`;
}

my @filenames_to_process = get_appropriate_filenames();

foreach my $type (qw/mp3 flac/) {
  my @files = grep /$type/, @filenames_to_process;
  unless(@files) {
    print "No files of type $type, skipping!\n" if $verbose or $dry_run;
    next;
  }

  print "Found filenames: @files (type $type)\n" if $verbose or $dry_run;

  my $to_dir = join(q{/}, $DROPBOX_BASE_DIR, $type, $dirname);
  find_and_delete_files_with_same_prefix($to_dir, @files);

  print "Ensuring destination directory $to_dir exists...\n" if $verbose or $dry_run;
  `mkdir -p $to_dir` unless $dry_run;

  foreach my $file (sort @files) {
    unless($dry_run) {
      print "Moving $file to $to_dir/$file\n";
      rename $file, "$to_dir/$file";
    }
  }
}

sub get_appropriate_filenames {
  opendir CURRENT_DIR, '.' or die "Couldn't open current directory: $!";
  my @files = readdir CURRENT_DIR;
  closedir CURRENT_DIR;

  return grep /\.(?:mp3|flac)$/, @files;
}

sub find_and_delete_files_with_same_prefix {
  my $to_dir = shift;

  return unless -d $to_dir;

  if(grep /^\d/, @_) {
    print "Would delete $to_dir/* since there are numbers at the starts of the filenames\n" if $dry_run;
    print "Deleting $to_dir/* since there are numbers at the starts of the filenames\n" unless $dry_run;
    `rm -f $to_dir/*` unless $dry_run;
  }

  if(grep /^Disc_/, @_) {
    my %prefixes;
    foreach my $filename (@_) {
      next unless $filename =~ /^(Disc_\d+)/;
      $prefixes{$1} = 1;
    }

    foreach my $prefix (keys %prefixes) {
      print "Would delete $to_dir/$prefix* since there are discs at the starts of the filenames\n" if $dry_run;
      print "Deleting $to_dir/$prefix* since there are discs at the starts of the filenames\n" unless $dry_run;
      `rm -f $to_dir/$prefix*` unless $dry_run;
    }
  }
}
